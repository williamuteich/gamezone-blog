// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  status    Boolean  @default(true)
  avatar    String?  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Team {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      TeamRole @default(EDITOR)
  avatar    String?
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("team")
}

enum TeamRole {
  ADMIN
  EDITOR
  MODERATOR
}

model Affiliate {
  id          String   @id @default(cuid())
  title       String
  description String
  link        String
  buttonName  String
  imageUrl    String?
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("affiliates")
}

model BlacklistedToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String?  // Para tokens de usu√°rio
  teamId    String?  // Para tokens de equipe
  reason    String   @default("logout") // logout, security, admin_revoke
  expiresAt DateTime // Quando o token expiraria naturalmente
  createdAt DateTime @default(now())

  @@map("blacklisted_tokens")
  @@index([token])
  @@index([expiresAt])
}